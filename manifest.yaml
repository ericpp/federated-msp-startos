id: msp-studio
title: "Music Side Project"
version: 1.0.0.1
release-notes: "Initial StartOS version"
license: mit
wrapper-repo: "https://github.com/thebells1111/msp-studio-startos"
upstream-repo: "https://github.com/thebells1111/msp-studio"
support-site: "https://podcastindex.social"
marketing-site: "https://musicsideproject.com/"
build: ["make"]

description:
  short: Music Side Project short description
  long: |
    Music Side Project long description

assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md

main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /data

health-checks:
  web-ui:
    name: Web Interface
    success-message: Music Side Project is ready to visit in a web browser
    type: script

config:
  get:
    type: script
  set:
    type: script

properties: ~

volumes:
  main:
    type: data

interfaces:
  main:
    name: Web Interface
    description: A simple user interface that is expected to display the text "Hello Word"
    tor-config:
      port-mapping:
        80: "8000"
    lan-config:
      443:
        ssl: true
        internal: 8000
    ui: true
    protocols:
      - tcp
      - http

dependencies: {}

backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /data/data
    mounts:
      # BACKUP is the default volume that is used for backups. This is whatever backup drive is mounted to the device, or a network filesystem.  
      # The value here donates where the mount point will be. The backup drive is mounted to this location.
      BACKUP: "/mnt/backup" 
      main: "/data/data"
  # The action to execute the backup restore functionality. Details for the keys below are the same as above.
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /data/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/data/data"

migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
